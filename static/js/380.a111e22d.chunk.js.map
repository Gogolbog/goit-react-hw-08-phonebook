{"version":3,"file":"static/js/380.a111e22d.chunk.js","mappings":"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","sources":["components/App/AppStyled.js","components/ContactForm/ContactFormStyled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListStyled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","Pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PageWrapper = styled.div`\n  gap: 1.1rem;\n  width: 300px;\n  margin: 0 auto;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  width: 300px;\n  margin: 0 auto;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  font-weight: bold;\n`;\n\nexport const Input = styled.input`\n  padding: 0.5rem;\n  font-size: 1rem;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  outline: none;\n`;\n\nexport const Button = styled.button`\n  padding: 0.5rem 1rem;\n  font-size: 1rem;\n  border-radius: 5px;\n  border: none;\n  background-color: #4caf50;\n  color: white;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #2e8b57;\n  }\n\n  &:active {\n    background-color: #145a32;\n  }\n`;\n\nexport const H1 = styled.h1`\n  font-size: 3rem;\n  font-weight: bold;\n  text-align: center;\n  color: #333;\n  margin-bottom: 2rem;\n`;\n\nexport const H2 = styled.h2`\n  font-size: 2rem;\n  font-weight: bold;\n  text-align: center;\n  color: #333;\n  margin-bottom: 1.5rem;\n`;\n","import { nanoid } from 'nanoid';\nimport React, { useState } from 'react';\nimport { Button, Form, H1, Input, Label } from './ContactFormStyled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createContactsThunk } from 'redux/contacts/thunk';\nimport { selectContacts } from 'selectors';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const findSimilarContact = () => {\n    return contacts.find(contact => contact.name === name);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const id = nanoid();\n    const newContact = { id, name, number };\n    findSimilarContact()\n      ? alert(`${name} is already in contacts.`)\n      : dispatch(createContactsThunk(newContact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <H1>Phone Book</H1>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          Name:\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Number:\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={e => setNumber(e.target.value)}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add Contact</Button>\n      </Form>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ContactListWrapper = styled.ul`\nwidth: 300px;\n  padding: 0;\n  margin: 0 auto;\n  list-style: none;\n\n  li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    background-color: #f7f7f7;\n    border-radius: 5px;\n  }\n\n  button {\n    padding: 5px 10px;\n    background-color: #ff4d4d;\n    border: none;\n    color: #fff;\n    border-radius: 3px;\n    cursor: pointer;\n    transition: all 0.3s ease;\n\n    &:hover {\n      background-color: #e60000;\n    }\n  }\n`;","import { ContactListWrapper } from './ContactListStyled';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { deleteContactsThunk, getContactsThunk } from 'redux/contacts/thunk';\nimport React, { useEffect } from 'react';\nimport { selectContacts, selectFilter } from 'selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contactsArr = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const getFilteredContacts = (contactsArr, filter) => {\n    return contactsArr.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const filteredContacts = filter\n    ? getFilteredContacts(contactsArr, filter)\n    : contactsArr;\n\n  return (\n    <ContactListWrapper>\n      {filteredContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <button\n            type=\"button\"\n            onClick={() => dispatch(deleteContactsThunk(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ContactListWrapper>\n  );\n};\n","import { H2, Input, Label } from 'components/ContactForm/ContactFormStyled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filteredContacts } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <>\n      <H2>Contacts</H2>\n      <Label htmlFor=\"filter\">\n        Find contacts by name\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={e => dispatch(filteredContacts(e.target.value))}\n        />\n      </Label>\n    </>\n  );\n};\n","import { PageWrapper } from 'components/App/AppStyled';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport React from 'react';\n\nconst ContactsPage = () => {\n  return (\n    <PageWrapper>\n      <ContactForm />\n\n      <Filter />\n\n      <ContactList />\n    </PageWrapper>\n  );\n};\nexport default ContactsPage;\n"],"names":["PageWrapper","styled","Form","Label","Input","Button","H1","H2","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","contacts","useSelector","selectContacts","onSubmit","event","preventDefault","newContact","id","nanoid","find","contact","alert","createContactsThunk","type","value","onChange","e","target","pattern","title","required","ContactListWrapper","ContactList","contactsArr","filter","selectFilter","useEffect","getContactsThunk","filteredContacts","toLowerCase","includes","getFilteredContacts","map","onClick","deleteContactsThunk","Filter","htmlFor"],"sourceRoot":""}