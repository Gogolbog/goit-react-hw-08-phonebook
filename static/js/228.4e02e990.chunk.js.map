{"version":3,"file":"static/js/228.4e02e990.chunk.js","mappings":"mUAMaA,EAAa,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAyBA,OACE,kBAAMC,SAxBa,SAAAC,GACnBA,EAAEC,iBAEFX,GACEY,EAAAA,EAAAA,IAAS,CACPT,KAAAA,EACAE,MAAAA,EACAE,SAAAA,KAGDM,SACAC,MAAK,WACJhB,EAAS,IACV,IACAiB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPf,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,GACJ,EAEC,WACE,UAAC,KAAD,CAAaY,GAAG,OAAOC,YAAU,EAAjC,WACE,SAAC,IAAD,oBACA,SAAC,EAAAC,EAAD,CAAOC,KAAK,OAAOC,SAAU,SAAAd,GAAC,OAAIN,EAAQM,EAAEe,OAAOC,MAArB,QAEhC,UAAC,KAAD,CAAaC,GAAI,EAAGP,GAAG,QAAQC,YAAU,EAAzC,WACE,SAAC,IAAD,6BACA,SAAC,EAAAC,EAAD,CAAOC,KAAK,QAAQC,SAAU,SAAAd,GAAC,OAAIJ,EAASI,EAAEe,OAAOC,MAAtB,QAEjC,UAAC,KAAD,CAAaC,GAAI,EAAGP,GAAG,WAAWC,YAAU,EAA5C,WACE,SAAC,IAAD,wBACA,SAAC,EAAAC,EAAD,CAAOC,KAAK,WAAWC,SAAU,SAAAd,GAAC,OAAIF,EAAYE,EAAEe,OAAOC,MAAzB,QAEpC,SAAC,IAAD,CAAQH,KAAK,SAASK,YAAY,OAAOD,GAAI,EAAGE,EAAE,OAAlD,uBAKL,E,UC3BD,EAzBe,WACb,OACE,UAAC,KAAD,CAAKC,KAAK,KAAKC,GAAG,OAAlB,WACE,SAAC,IAAD,CAAMC,SAAS,MAAMC,WAAW,OAAOC,UAAU,SAASC,GAAI,EAA9D,qCAGA,SAACtC,EAAD,KACA,SAAC,IAAD,CAAO8B,GAAI,EAAGS,UAAU,MAAMC,QAAS,EAAGC,WAAW,SAArD,UACE,UAAC,IAAD,sCAC2B,KACzB,SAAC,IAAD,CACEC,GAAIC,EAAAA,GACJC,GAAG,SACHC,MAAM,WACNC,eAAe,YACfC,OAAQ,CAAEF,MAAO,WAAYC,eAAgB,QAL/C,0BAaT,C","sources":["components/SignUpForm.jsx","Pages/SignUpPage.jsx"],"sourcesContent":["import { FormControl, FormLabel, Input, Button } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { register } from 'redux/auth/operations';\n\nexport const SignUpForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n      })\n    )\n      .unwrap()\n      .then(() => {\n        navigate('/');\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setName('');\n        setEmail('');\n        setPassword('');\n      });\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormControl id=\"name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input type=\"text\" onChange={e => setName(e.target.value)} />\n      </FormControl>\n      <FormControl mt={4} id=\"email\" isRequired>\n        <FormLabel>Email address</FormLabel>\n        <Input type=\"email\" onChange={e => setEmail(e.target.value)} />\n      </FormControl>\n      <FormControl mt={4} id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <Input type=\"password\" onChange={e => setPassword(e.target.value)} />\n      </FormControl>\n      <Button type=\"submit\" colorScheme=\"blue\" mt={8} w=\"full\">\n        Sign up\n      </Button>\n    </form>\n  );\n};\n","import { Box, Stack, Text, Link as ChakraLink } from '@chakra-ui/react';\nimport { SignUpForm } from 'components/SignUpForm';\nimport { Link } from 'react-router-dom';\n\nconst SignUp = () => {\n  return (\n    <Box maxW=\"md\" mx=\"auto\">\n      <Text fontSize=\"3xl\" fontWeight=\"bold\" textAlign=\"center\" mb={8}>\n        Sign Up for Phone Book\n      </Text>\n      <SignUpForm />\n      <Stack mt={8} direction=\"row\" spacing={4} alignItems=\"center\">\n        <Text>\n          Already have an account?{' '}\n          <ChakraLink\n            as={Link}\n            to=\"/login\"\n            color=\"blue.500\"\n            textDecoration=\"underline\"\n            _hover={{ color: 'blue.600', textDecoration: 'none' }}\n          >\n            Login\n          </ChakraLink>\n        </Text>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default SignUp;\n"],"names":["SignUpForm","navigate","useNavigate","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","onSubmit","e","preventDefault","register","unwrap","then","catch","error","console","log","finally","id","isRequired","I","type","onChange","target","value","mt","colorScheme","w","maxW","mx","fontSize","fontWeight","textAlign","mb","direction","spacing","alignItems","as","Link","to","color","textDecoration","_hover"],"sourceRoot":""}